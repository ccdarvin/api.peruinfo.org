# Generated by Django 4.2.4 on 2023-08-25 17:02

import django.contrib.postgres.search
from django.db import migrations


def update_search_vector(apps, schema_editor):
    Padron = apps.get_model("sunat", "Padron")
    db_alias = schema_editor.connection.alias
    Padron.objects.using(db_alias).update(search_vector=django.contrib.postgres.search.SearchVector('razon_social', 'ruc'))


class Migration(migrations.Migration):

    dependencies = [
        ('sunat', '0004_padron_search_vector'),
    ]

    operations = [
        migrations.RunSQL(
            "CREATE INDEX padron_search_vector ON sunat_padron USING GIN(search_vector);",
            "DROP INDEX padron_search_vector;",
        ),
        # create trigger
        migrations.RunSQL(
            """
            CREATE TRIGGER padron_search_vector_update
            BEFORE INSERT OR UPDATE
            ON sunat_padron
            FOR EACH ROW EXECUTE PROCEDURE
            tsvector_update_trigger(search_vector, 'pg_catalog.spanish', razon_social, ruc);
            """,
            "DROP TRIGGER padron_search_vector_update ON sunat_padron;",
        ),
        migrations.RunPython(update_search_vector, reverse_code=migrations.RunPython.noop),
    ]
